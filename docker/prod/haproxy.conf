global
  log fd@0 local0
  log fd@1 local1 notice
  log fd@2 local2 
  chroot /var/lib/haproxy
  lua-load /etc/haproxy/acme-http01-webroot.lua

  stats socket /var/lib/haproxy/stats mode 660 level admin expose-fd listeners
	stats timeout 30s

  user         haproxy
  group        haproxy

  # crt-base /etc/letsencrypt/live
  # ca-base /etc/letsencrypt/live

	# ssl-dh-param-file /etc/haproxy/dhparam/dhparam.pem
	# tune.ssl.default-dh-param 2048
  
  # ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  # ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_RSA_WITH_AES_256_CBC_SHA:TLS_RSA_WITH_AES_128_CBC_SHA:TLS_RSA_WITH_AES_256_CBC_SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

	maxconn 3000

  # workaround for bug #14 (Cert renewal blocks HAProxy indefinitely with Websocket connections)
  # hard-stop-after 3s

	master-worker

resolvers docker
  nameserver dns 127.0.0.11:53

defaults
	log	global
	mode http
	option httplog
	option dontlognull
  option forwardfor

  timeout connect 2h
  timeout client  2h
  timeout server  2h
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

  default-server init-addr last,libc,none

listen stats
    mode http
    bind *:8404
    stats enable
    stats uri /
    stats refresh 10s
    stats show-legends
    stats show-node
    stats hide-version
    stats realm Haproxy\ Statistic

frontend http
  bind *:80
  mode http
  use_backend websocket_backend if { path_beg /live }
  acl url_acme_http01 path_beg /.well-known/acme-challenge/
  http-request use-service lua.acme-http01 if METH_GET url_acme_http01
  redirect scheme https code 301 if !{ ssl_fc }

frontend https
  option logasap
  maxconn 3000
  bind *:443 ssl crt /etc/haproxy/certs/ no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11
  mode http
  default_backend app_backend

frontend grafana
  bind *:3000 ssl crt /etc/haproxy/certs/ no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11
  mode http
  use_backend grafana_backend

frontend postgres
  bind *:5432 ssl crt /etc/haproxy/certs/ no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11
  mode tcp
  default_backend postgres_backend

backend app_backend
  mode http
  balance roundrobin
  cookie SERVER insert indirect nocache
  server-template language_translator_ 2 app:4000 check resolvers docker init-addr libc,none

backend websocket_backend
  mode http
  balance roundrobin
  cookie SERVER insert indirect nocache
  option http-server-close
  timeout tunnel 1h
  server-template language_translator_ 2 app:4000 check resolvers docker init-addr libc,none

backend grafana_backend
  mode http
  server grafana grafana:3000 check resolvers docker init-addr libc,none

backend postgres_backend
  mode tcp
  server postgres postgres:5432 check resolvers docker init-addr libc,none
