version: '3.7'

services:
  app:
    image: ghcr.io/yaboiishere/language_translator:latest
    hostname: "app"
    env_file:
      - .env.prod
    environment:
      PGUSER: $POSTGRES_USER
      PGPASSWORD: $POSTGRES_PASSWORD
      PGHOST: $POSTGRES_HOST
      PGPORT: $POSTGRES_PORT
      SECRET_KEY_BASE: $SECRET_KEY_BASE
      RELEASE_COOKIE: $RELEASE_COOKIE
    depends_on:
      - postgres
      - loki
    volumes:
      - ./service_account.json:/app/service_account.json
      - ./.env.prod:/app/.env

  postgres:
    image: postgres:16-alpine
    env_file:
      - .env.prod
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  haproxy:
    image: "ghcr.io/tomdess/docker-haproxy-certbot"
    environment:
      - CERT=$PHX_HOST
    volumes:
      - ./docker/prod/haproxy.conf:/etc/haproxy/haproxy.cfg
      - /etc/letsencrypt
    ports:
      - published: 80
        target: 80
        protocol: tcp
        mode: host
      - published: 443
        target: 443
        protocol: tcp
        mode: ingress
      - published: 8404
        target: 8404
        protocol: tcp
        mode: host
    dns:
      - 127.0.0.11
      - 8.8.8.8

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    user: root
    volumes:
      - grafana_data:/var/lib/grafana
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"

volumes:
  loki_data:
  pg_data:
  grafana_data:

