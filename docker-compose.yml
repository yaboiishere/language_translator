version: '3.7'

services:
  app:
    hostname: "app"
    env_file:
      - .env.prod
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PGUSER: $POSTGRES_USER
      PGPASSWORD: $POSTGRES_PASSWORD
      PGHOST: $POSTGRES_HOST
      PGPORT: $POSTGRES_PORT
      SECRET_KEY_BASE: $SECRET_KEY_BASE
      RELEASE_COOKIE: $RELEASE_COOKIE
    depends_on:
      - postgres
    volumes:
      - ./service_account.json:/app/service_account.json
      - ./.env.prod:/app/.env

  postgres:
    image: postgres:16-alpine
    env_file:
      - .env.prod
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./_pgdata:/var/lib/postgresql/data

  # nginx:
  #   image: nginx:latest
  #   volumes:
  #     - ./docker/prod/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - app
  #   ports:
  #      - "80:80"
  haproxy:
    image: "ghcr.io/tomdess/docker-haproxy-certbot"
    volumes:
      - ./docker/prod/haproxy.conf:/etc/haproxy/haproxy.cfg
      - /etc/letsencrypt
    ports:
      - published: 80
        target: 80
        protocol: tcp
        mode: host
      - published: 443
        target: 443
        protocol: tcp
        mode: ingress
      - published: 8404
        target: 8404
        protocol: tcp
        mode: host
    dns:
      - 127.0.0.11
      - 8.8.8.8

